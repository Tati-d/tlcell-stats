{"version":3,"sources":["components/Header/Header.js","utils/axios.js","config.js","components/Filters/Filters.js","components/LoginForm/LoginForm.js","components/Loader/Loader.js","utils/localStorage.js","App.js","serviceWorker.js","index.js"],"names":["Header","isLoginIn","onLogout","Navbar","expand","variant","className","Container","Brand","href","Button","onClick","instance","axios","create","baseURL","headers","interceptors","response","use","data","error","Promise","reject","apiCall","console","log","url","method","prepareDate","date","moment","format","Filters","useState","isLoading","setIsLoading","Date","setHours","startDate","setStartDate","now","endDate","setEndDate","statistics","setStatistics","getStats","a","client","supplier","period","JSON","stringify","res","body","clientStatistics","onStartDateSelect","onEndDateSelect","LoadBtn","disabled","Spinner","as","animation","size","role","aria-hidden","Tables","map","item","idx","table","key","name","Math","random","TableItem","totalDuration","Table","striped","bordered","hover","responsive","destinations","TableRow","rate","setRate","Number","toFixed","percent","setPercent","usage","setUsage","durationInMinutes","minutes","setMinutes","useEffect","mins","destinationCode","calls","asr","acd","callBack","type","value","onChange","newVal","target","step","min","Calendars","handleDateSelection","selected","selectsStart","showTimeSelect","timeFormat","dateFormat","selectsEnd","minDate","LoginForm","onSubmit","userName","setUserName","password","setPassord","credentials","user","Form","Group","controlId","Label","Control","placeholder","toLowerCase","alert","Loader","isVisible","TOKEN","App","setIsLoginIn","token","localStorage","getItem","err","getToken","removeItem","TextTrackCueList","setTimeout","setItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8303b32a.chunk.js","sourcesContent":["import React from 'react';\nimport {Navbar, Container, Row, Button} from 'react-bootstrap';\n\n//styles\nimport './Header.sass';\n\nexport const Header = ({isLoginIn = true, onLogout = () => {}}) => {\n\n\treturn (\n\t\t<Navbar expand=\"lg\" variant=\"light\" className={'Header'}>\n\t\t\t<Container>\n\t\t\t\t<Navbar.Brand href=\"#\">TLCELL</Navbar.Brand>\n\t\t\t\t{isLoginIn ? (\n\t\t\t\t\t<Button variant=\"link\" onClick={onLogout}>\n\t\t\t\t\t\tAdmin\n\t\t\t\t\t</Button>\n\t\t\t\t) : null}\n\t\t\t</Container>\n\t\t</Navbar>\n\t);\n};\n","import axios from 'axios';\nimport {apiUrl} from '../config';\n\nconst baseURL = apiUrl;\n\nconst instance = axios.create({\n\tbaseURL,\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t},\n});\n\nconst getAllStats = (data) => {\n\tconsole.log(data, 'data');\n\treturn instance({\n\t\turl: 'statistic/new',\n\t\tmethod: 'POST',\n\t\tdata,\n\t});\n};\n\n// Add a response interceptor\ninstance.interceptors.response.use(\n\t(response) => {\n\t\treturn response.data;\n\t},\n\t(error) => {\n\t\treturn Promise.reject(error?.response);\n\t}\n);\n\nexport const apiCall = {\n\tgetAllStats,\n};\n","export const apiUrl = 'http://80.211.129.183:8081/api/';\n","import React, {useState, useEffect} from 'react';\nimport {Button, Container, Table, Spinner} from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\n//styles\nimport './Filters.sass';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n//Utils\nimport {apiCall} from '../../utils/axios';\n\n//Fake Data\nimport {fakeData} from '../../fakeData';\n\nconst prepareDate = (date) => {\n\treturn moment(date).format(`YYYY-MM-DD HH:mm:ss`);\n};\n\nexport const Filters = () => {\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [startDate, setStartDate] = useState(\n\t\tprepareDate(new Date().setHours(0, 0, 0, 0), 'start')\n\t);\n\tconst [endDate, setEndDate] = useState(prepareDate(Date.now()));\n\tconst [clientName, setClientName] = useState('');\n\tconst [supplierName, setSupplierName] = useState('');\n\tconst [statistics, setStatistics] = useState([]);\n\n\tconst getStats = async () => {\n\t\tsetStatistics([]);\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tconst data = {\n\t\t\t\tclient: '',\n\t\t\t\tsupplier: '',\n\t\t\t\tperiod: {\n\t\t\t\t\tstartDate,\n\t\t\t\t\tendDate,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst res = await apiCall.getAllStats(JSON.stringify(data));\n\t\t\tsetStatistics(res.response.body.clientStatistics || []);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Calendars\n\t\t\t\tonStartDateSelect={(date) => {\n\t\t\t\t\tsetStartDate(prepareDate(date));\n\t\t\t\t}}\n\t\t\t\tonEndDateSelect={(date) => {\n\t\t\t\t\tsetEndDate(prepareDate(date));\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<LoadBtn isLoading={isLoading} onClick={getStats} />\n\t\t\t<Tables data={statistics} />\n\t\t</Container>\n\t);\n};\n\nconst LoadBtn = ({isLoading = false, onClick = () => {}}) => {\n\treturn (\n\t\t<div className={'Filters__laod-btn-wrap'}>\n\t\t\t{isLoading ? (\n\t\t\t\t<Button\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\tdisabled\n\t\t\t\t\tclassName=\"Filters__laod-btn\"\n\t\t\t\t>\n\t\t\t\t\t<Spinner\n\t\t\t\t\t\tas=\"span\"\n\t\t\t\t\t\tanimation=\"border\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\trole=\"status\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t<span> Loading...</span>\n\t\t\t\t</Button>\n\t\t\t) : (\n\t\t\t\t<Button\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\tclassName=\"Filters__laod-btn\"\n\t\t\t\t>\n\t\t\t\t\t<span>Load</span>\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst Tables = ({data}) => {\n\treturn data.map((item, idx) => (\n\t\t<TableItem table={item} key={`${item.name}${Math.random() * idx}`} />\n\t));\n};\n\nconst TableItem = ({table = {}, idx}) => {\n\treturn (\n\t\t<>\n\t\t\t<div className={'Table__title'}>\n\t\t\t\t<span className={'Table__title-item'}>\n\t\t\t\t\t<b>{table?.name}</b>\n\t\t\t\t</span>\n\t\t\t\t<span className={'Table__title-item'}>\n\t\t\t\t\ttotal: <b>{table?.totalDuration}</b>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<Table striped bordered hover size=\"sm\" responsive>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Code</th>\n\t\t\t\t\t\t<th>Calls</th>\n\t\t\t\t\t\t<th>Min</th>\n\t\t\t\t\t\t<th>Usage</th>\n\t\t\t\t\t\t<th>asr</th>\n\t\t\t\t\t\t<th>acd</th>\n\t\t\t\t\t\t<th>cb</th>\n\t\t\t\t\t\t<th>rate</th>\n\t\t\t\t\t\t<th>{'  %  '}</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{table.destinations.map((item) => (\n\t\t\t\t\t\t<TableRow item={item} key={`${Math.random() * 100}`} />\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</>\n\t);\n};\n\nconst TableRow = ({item}) => {\n\tconst [rate, setRate] = useState(0.01);\n\tconst [percent, setPercent] = useState(Number(1).toFixed(3));\n\tconst [usage, setUsage] = useState(1);\n\tconst [minutes, setMinutes] = useState(item.durationInMinutes);\n\n\tconst handleRateChange = (newVal) => {\n\t\t// const val = +newVal.target.value;\n\t\tsetRate(+newVal.target.value);\n\t};\n\n\tconst handlePercentChange = (newVal) => {\n\t\tsetPercent(+newVal.target.value);\n\t};\n\n\tuseEffect(() => {\n\t\tconst res = +rate * +item.durationInMinutes;\n\t\tsetUsage(res.toFixed(3));\n\t}, [rate]);\n\n\tuseEffect(() => {\n\t\tconst res = +rate * +item.durationInMinutes * +percent;\n\t\tconst mins = +item.durationInMinutes * +percent;\n\t\tsetMinutes(mins.toFixed(2));\n\t\tsetUsage(res.toFixed(3));\n\t}, [percent]);\n\n\treturn (\n\t\t<tr>\n\t\t\t<td>{item.destinationCode}</td>\n\t\t\t<td>{item.calls}</td>\n\t\t\t<td>{minutes}</td>\n\t\t\t<td>{usage}</td>\n\t\t\t<td>{item.asr}</td>\n\t\t\t<td>{item.acd}</td>\n\t\t\t<td>{item.callBack}</td>\n\t\t\t<td className={'Table__rate'}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={rate}\n\t\t\t\t\tonChange={handleRateChange}\n\t\t\t\t\tstep=\"0.01\"\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t/>\n\t\t\t</td>\n\t\t\t<td className={'Table__rate'}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={percent}\n\t\t\t\t\tstep=\"0.001\"\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t\tonChange={handlePercentChange}\n\t\t\t\t/>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\nconst Calendars = ({\n\tonStartDateSelect = () => {},\n\tonEndDateSelect = () => {},\n}) => {\n\tconst [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0, 0));\n\tconst [endDate, setEndDate] = useState(new Date());\n\n\tconst handleDateSelection = (type = 'end', date) => {\n\t\tif (type === 'end') {\n\t\t\tsetEndDate(date);\n\t\t\tonEndDateSelect(date);\n\t\t} else {\n\t\t\tsetStartDate(date);\n\t\t\tonStartDateSelect(date);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={'calendars__wrap'}>\n\t\t\t<div className=\"calendar\">\n\t\t\t\t<span className={'calendar__title'}>From:</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tselected={startDate}\n\t\t\t\t\tonChange={(date) => handleDateSelection('start', date)}\n\t\t\t\t\tselectsStart\n\t\t\t\t\tstartDate={startDate}\n\t\t\t\t\tendDate={endDate}\n\t\t\t\t\tshowTimeSelect\n\t\t\t\t\ttimeFormat=\"HH:mm\"\n\t\t\t\t\tdateFormat=\"MMMM d, yyyy HH:mm\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"calendar\">\n\t\t\t\t<span className={'calendar__title'}>To:</span>\n\t\t\t\t<DatePicker\n\t\t\t\t\tselected={endDate}\n\t\t\t\t\tonChange={(date) => handleDateSelection('end', date)}\n\t\t\t\t\tselectsEnd\n\t\t\t\t\tstartDate={startDate}\n\t\t\t\t\tendDate={endDate}\n\t\t\t\t\tminDate={startDate}\n\t\t\t\t\tshowTimeSelect\n\t\t\t\t\ttimeFormat=\"HH:mm\"\n\t\t\t\t\tdateFormat=\"MMMM d, yyyy HH:mm\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, {useState, useEffect} from 'react';\nimport {Form, Container, Button} from 'react-bootstrap';\n\n//styles\nimport './LoginForm.sass';\n\nexport const LoginForm = ({onSubmit = () => {}}) => {\n\tconst [userName, setUserName] = useState('');\n\tconst [password, setPassord] = useState('');\n\n\tconst credentials = {\n\t\tuser: 'pur_root',\n\t\tpassword: 'GnOIRENM@24299545',\n\t};\n\n\tconst onChangeUserName = (newVal) => {\n\t\tsetUserName(newVal.target.value);\n\t};\n\n\tconst onChangeUPassword = (newVal) => {\n\t\tsetPassord(newVal.target.value);\n\t};\n\n\tconst validateForm = () => {\n\t\treturn (\n\t\t\tuserName.toLowerCase() === credentials.user.toLowerCase() &&\n\t\t\tpassword.toLowerCase() === credentials.password.toLowerCase()\n\t\t);\n\t};\n\n\tconst submitForm = () => {\n\t\tif (validateForm()) {\n\t\t\tonSubmit();\n\t\t} else {\n\t\t\talert('Wrong data');\n\t\t}\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Form className=\"LoginForm\">\n\t\t\t\t<Form.Group controlId=\"formBasic\">\n\t\t\t\t\t<Form.Label>User Name</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Enter user name\"\n\t\t\t\t\t\tonChange={onChangeUserName}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tonChange={onChangeUPassword}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button variant=\"primary\" type=\"submit\" onClick={submitForm}>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</Container>\n\t);\n};\n","import React, {useState, useEffect} from 'react';\nimport {Spinner} from 'react-bootstrap';\n\n//styles\nimport './Loader.sass';\n\nexport const Loader = ({isVisible = false}) => {\n\treturn isVisible ? (\n\t\t<div className=\"Loader__wrap\">\n\t\t\t<Spinner animation=\"border\" role=\"status\">\n\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t</Spinner>\n\t\t</div>\n\t) : null;\n};\n","const TOKEN = '@TLCELL-LOGIN';\n\nconst getToken = () => {\n\ttry {\n\t\tconst token = localStorage.getItem(TOKEN);\n\t\treturn !!token ? token : null;\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n};\n\nconst setToken = () => {\n\tlocalStorage.setItem(TOKEN, TOKEN);\n\tconsole.log('TOKEN WAS ADDED SUCCESS');\n};\n\nconst removeToken = () => {\n\tlocalStorage.removeItem(TOKEN);\n\tconsole.log('TOKEN WAS REMOVED');\n};\n\nexport {getToken, setToken, removeToken};\n","import React, {useState, useEffect} from 'react';\nimport './App.sass';\nimport {Container, Row, Spinner} from 'react-bootstrap';\n\n//UI Components\nimport {Header} from './components/Header/Header';\nimport {Filters} from './components/Filters/Filters';\nimport {LoginForm} from './components/LoginForm/LoginForm';\nimport {Loader} from './components/Loader/Loader';\n\n//LocaLStorage\nimport {getToken, setToken, removeToken} from './utils/localStorage';\n\nconst App = () => {\n\tconst [isLoginIn, setIsLoginIn] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tconst onFormSubmit = () => {\n\t\tsetIsLoading(true);\n\t\tsetTimeout(() => {\n\t\t\tsetIsLoginIn(true);\n\t\t\tsetToken();\n\t\t\tsetIsLoading(false);\n\t\t}, 1000);\n\t};\n\n\tuseEffect(() => {\n\t\ttry {\n\t\t\tconst token = getToken();\n\t\t\tif (token) {\n\t\t\t\tsetIsLoginIn(true);\n\t\t\t} else {\n\t\t\t\tsetIsLoginIn(false);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t}\n\t}, []);\n\n\tconst logOut = () => {\n\t\tremoveToken();\n\t\tsetIsLoginIn(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Header isLoginIn={isLoginIn} onLogout={logOut} />\n\t\t\t{isLoading ? (\n\t\t\t\t<Loader isVisible={TextTrackCueList} />\n\t\t\t) : isLoginIn ? (\n\t\t\t\t<Filters />\n\t\t\t) : (\n\t\t\t\t<LoginForm onSubmit={onFormSubmit} />\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}